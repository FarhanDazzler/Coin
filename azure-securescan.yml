trigger:
  - dev

resources:
  repositories:
    - repository: appsectemplates
      type: git
      name: DevSecOps/DevSecOps
      # endpoint: 'Cross-Org ab-inbev devsecops'

jobs:
  - job: SecureScan
    displayName: SecureScan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        fetchDepth: 0
      - checkout: appsectemplates

      - template: pipeline_templates/Security_tasks/prepareSonarCloud.yml@appsectemplates
        parameters:
          SCServiceConnection: 'SonarcloudServer'
          SCProjectKey: 'Compliance_GRC_MICS_PWA_frontend'
          SCProjectName: 'Compliance_GRC_MICS_PWA_frontend'
          SCBranchName: '$(Build.SourceBranchName)'
          SCBaseDirPath: './$(Build.Repository.Name)'

      - task: Npm@1
        displayName: npm install
        inputs:
          command: custom
          workingDir: '$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)'
          verbose: false
          customCommand: install --legacy-peer-deps

      - task: Npm@1
        inputs:
          command: 'custom'
          workingDir: '$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)'
          customCommand: 'run build:dev'

      - template: pipeline_templates/secure_code_scan.yml@appsectemplates
        parameters:
          scanSonarCloud: false
          sonarCloudGate: false
          SCServiceConnection: 'SonarcloudServer'
          SCOrganization: 'ab-inbev'

          scanGitleaks: false
          FailOnSecrets: false

          scanSnyk: false
          SKFailOnIssues: false
          SkServiceConnection: 'SnykServer'
          SkOrganization: 'f8e30283-d4c9-47be-821e-f7bcc1b2afca'
          SkAdditionalArgs: '--all-projects --detection-depth=4'
          App360ID: 'SE-03996'

          scanCheckmarx: false
          CxServiceConnection: 'CheckmarxServer'
          CxPreset: 'ASA_SDLC_Ready'
          CxEnableSyncScan: true
          CxEnableThreshold: true
          CxTeamName: '/CxServer/AB-InBev/GHQ/Digital Solutions'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          # workingDir: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)"
          PathtoPublish: $(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/build
