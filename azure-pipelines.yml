trigger:
  - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

resources:
  repositories:
  #   - repository: appsectemplates
  #     type: git
  #     name: DevSecOps/DevSecOps
  #     endpoint: "Cross-Org ab-inbev devsecops"

jobs:
  - job: SecureScan
    displayName: SecureScan

    steps:
      - checkout: self
        fetchDepth: 0
      - checkout: appsectemplates

      - task: Npm@1
        displayName: npm install
        inputs:
          command: custom
          workingDir: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)"
          verbose: false
          customCommand: install --legacy-peer-deps

      # - template: pipeline_templates/Security_tasks/prepareSonarCloud.yml@appsectemplates
      #   parameters:
      #     SCServiceConnection: "SonarcloudServer"
      #     SCProjectKey: "DSCOE_Compliance_GRC_MICS_PWA__GRC_MICS_SA_FrontEnd"
      #     SCProjectName: "DSCOE_Compliance_GRC_MICS_PWA__GRC_MICS_SA_FrontEnd"
      #     SCBranchName: "$(Build.SourceBranchName)"
      #     SCBaseDirPath: "./$(Build.Repository.Name)"

      - task: Npm@1
        displayName: npm build
        inputs:
          command: "custom"
          workingDir: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)"
          customCommand: "run build"

      # - template: pipeline_templates/secure_code_scan.yml@appsectemplates
      #   parameters:
      #     scanSonarCloud: true
      #     sonarCloudGate: false
      #     SCServiceConnection: "SonarcloudServer"

      #     scanSnyk: true
      #     SKFailOnIssues: true
      #     SkServiceConnection: "SnykServer"
      #     SkOrganization: ""
      #     SkAdditionalArgs: "--all-projects --detection-depth=4 --strict-out-of-sync=false --remote-repo-url=$(Build.Repository.Name)"
      #     App360ID: SE-08426

      #     scanGitleaks: true
      #     FailOnSecrets: true

      #     scanCheckmarx: true
      #     CxServiceConnection: "CheckmarxServer"
      #     CxPreset: "ASA_SDLC_Ready"
      #     CxEnableSyncScan: true
      #     CxEnableThreshold: true
      #     CxTeamName: "/CxServer/AB-InBev/GHQ/Digital Solutions"
      

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          # workingDir: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)"
          PathtoPublish: $(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/build

      # - task: ArchiveFiles@2
      #   inputs:
      #     rootFolderOrFile: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/build"
      #     includeRootFolder: false
      #     archiveType: "zip"
      #     archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      #     replaceExistingArchive: true

      # - task: PublishPipelineArtifact@1
      #   inputs:
      #     targetPath: "$(Build.ArtifactStagingDirectory)"
      #     publishLocation: "pipeline"
